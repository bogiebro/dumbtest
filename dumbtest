#!/usr/bin/env bash
set -o pipefail

# Set defaults based on what's available
[ -n "$TAIL" ] || {
  tail -v /dev/null >/dev/null 2>&1 && export TAIL="tail -v -n +1";
} || {
  gtail -v /dev/null >/dev/null 2>&1 && export TAIL="gtail -v -n +1";
} || {
  echo TAIL must be installed and support flag -v && exit 1;
}
[ -n "$DIFF" ] || {
  diff -wy /dev/null /dev/null && export DIFF="diff -wy --suppress-common-lines";
} || {
  echo DIFF must be installed and support flags -wy && exit 1;
}

# Run DIFF on any expectations
function examine {
  $TIMEOUT $1 > $2.stdout 2> $2.stderr
  STATUS=$?
  echo $STATUS > $2.status
  {
    rm -f $2.compile.*
    [ -e $3.stderr ] && ($DIFF $2.stderr $3.stderr > $2.stderr.diff || $TAIL $2.stderr.diff)
  } || {
    rm -f $2.stderr.diff
    [ -e $3.stdout ] && ($DIFF $2.stdout $3.stdout > $2.stdout.diff || $TAIL $2.stdout.diff)
  } || {
    rm -f $2.stdout.diff
    [ -e $2.gen.stdout ] && ($DIFF $2.stdout $2.gen.stdout > $2.gen.stdout.diff || $TAIL $2.gen.stdout.diff)
  } || {
    rm -f $2.gen.stdout.diff
    [ -e $2.gen.stderr ] && ($DIFF $2.stderr $2.gen.stderr > $2.gen.stderr.diff || $TAIL $2.gen.stderr.diff)
  } || {
    rm -f $2.gen.stderr.diff
    [ -e $2.gen.status ] && ($DIFF $2.status $2.gen.status > $2.gen.status || $TAIL $2.gen.status.diff)
  } || {
    rm -f $2.gen.status.diff
    $DIFF $2.status `[ -e $3.status ] && echo $3.status || echo /tmp/zero` > $2.status.diff || {
      $TAIL $2.status.diff
      false
    }
  }
}

# Test a single file
function test_file {
  [ -z "$VERBOSE" ] || echo TESTING FILE $1
  [ -z "$COMPILE" ] && TARGET_EXT=$SRC_EXT
  file=`echo $1 | sed s/$SRC_EXT'$'/$TARGET_EXT/`
  lfile=`basename $file`
  {
    [ -z "$COMPILE" ] && cp $file $lfile || {
      examine "$COMPILE $1" $lfile.compile $file.compile && [ $STATUS -eq 0 ];
    } && examine "$INTERPRETER ./$lfile" $lfile $file
  } || echo
}

# Should we test this file/directory?
function ok {
  [ -z "$FILE" ] || expr $FILE : $1 && \
    ([ -z "$DIR" ] || expr $1 : $DIR || expr $DIR : $1)
}

# Run tests for all files in a directory
function test_dir {
  source $1/CONFIG 2>/dev/null
  for src in `find $1 -maxdepth 1 -type f -name "*$SRC_EXT"`; do
    ok $src >/dev/null && test_file $src
  done
  for dir in `find $1 -maxdepth 1 -mindepth 1 -type d`; do
    ok $dir >/dev/null && (trap 'finish; kill -HUP 0' INT; test_dir $dir)
  done
}

# Test whatever the user gives us
TOP=`pwd`
[ $# -eq 1 ] && {
  export FILE=`realpath $1` || exit 1;
} || export DIR=$TOP
echo $TOP | grep tests >/dev/null || { echo No test directory found; exit 1; }
TESTDIR=`echo $TOP | sed 's/\(.*\/tests\).*$/\1/'`
cd $TESTDIR/.. 
rm -rf test_build || exit 1
mkdir test_build; cd test_build
echo 0 > /tmp/zero

# Always write a summary of what happened
function finish {
  TOTAL=`find . -type f -name '*.diff' | wc -l`
  find . -type f -empty -delete
  FAILED=`find . -type f -name '*.diff' | wc -l`
  echo; echo FAILED $FAILED/$TOTAL TESTS | tee INFO; echo >> INFO
  find -s . -type f -name '*.diff' -exec $TAIL {} \; >> INFO
}
trap 'finish; kill -HUP 0' INT
test_dir $TESTDIR
finish
